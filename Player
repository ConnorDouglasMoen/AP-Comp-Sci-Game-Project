import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.util.ArrayList;

import javax.swing.ImageIcon;

public class Player extends Entity{
	
	int velX=0, velY=0, speed=2, lives=75;

	public Player(int x, int y) {
		super(x, y);
		update();
	}

	public void update(){
		y += velY;
		x += velX;
		checkCollisions();
		checkOffScreen();
	}
	
	public void draw(Graphics2D g2d){
		g2d.drawImage(getPlayerImg(),  x,  y,  null);
		g2d.draw(getBounds());
		g2d.drawString("Level "+GameFrame.level, 220, 25);
		
		
		
		if(lives>45){
		g2d.setColor(Color.GREEN);
		}
		else if(lives>25){
			g2d.setColor(Color.YELLOW);
		}
		else{
			g2d.setColor(Color.red);
		}
		
		g2d.fillRect(400, 20, lives, 15);
	}
	
	public Image getPlayerImg(){
		
		ImageIcon ic = new ImageIcon("C:/GameImages/Ship2.png");
		return ic.getImage();
	}
	
	public void keyPressed(KeyEvent e){
		int key=e.getKeyCode();
		
		if(key == KeyEvent.VK_UP){
			velY=-speed;
		}
		
		else if(key == KeyEvent.VK_DOWN){
			velY=speed;
		}
		
		else if(key == KeyEvent.VK_LEFT){
			velX=-speed;
		}
		
		else if(key == KeyEvent.VK_RIGHT){
			velX=speed;
		}
	}
	
	public void keyReleased(KeyEvent e){
		int key=e.getKeyCode();
		
		if(key == KeyEvent.VK_UP){
			velY=0;
		}

		else if(key == KeyEvent.VK_LEFT){
			velX=0;
		}

		else if(key == KeyEvent.VK_DOWN){
			velY=0;
		}

		else if(key == KeyEvent.VK_RIGHT){
			velX=0;
		}
	}//End of keyReleased
	
	public void checkCollisions(){
		ArrayList<Enemy> enemies = GameFrame.getEnemyList();
		for (int i=0; i<enemies.size(); i++){
			Enemy tempEnemy = enemies.get(i);
			if (getBounds().intersects(enemies.get(i).getBounds())){
					lives--;
					
					if(lives==0){
						System.out.println("You made it to level "+GameFrame.level);
						System.out.println("GAME OVER");
						System.exit(0);
					}
			}
			
		}
		
	}
	
	public void checkOffScreen(){
		if(getBounds().intersects(offRight())){
			velX=-2;
			
			/*lives--;
			if(lives==0){
				System.out.println("You made it to level "+GameFrame.level);
				System.out.println("GAME OVER");
				System.exit(0);
			}*/
			
		}
		else if (getBounds().intersects(offLeft())){
			velX=2;
			
			/*lives--;
			if(lives==0){
				System.out.println("You made it to level "+GameFrame.level);
				System.out.println("GAME OVER");
				System.exit(0);
			}*/
		}
		else if(getBounds().intersects(offBottom())){
			velY=-2;
		}
		
	}
	
	public Rectangle getBounds(){
		//return new Rectangle(x, y, getPlayerImg().getWidth(null), getPlayerImg().getHeight(null));
		
		return new Rectangle(x, y, 25, 25);
		
	}
	
	public Rectangle offRight(){
		return new Rectangle(490, -5, 200, 600);
	}
	
	public Rectangle offLeft(){
		return new Rectangle(-200, -5, 195, 600);
	}
	
	public Rectangle offBottom(){
		return new Rectangle(-5, 575, 600, 200);
	}


}

