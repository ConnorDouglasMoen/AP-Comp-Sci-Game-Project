import java.awt.Color;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class Main implements Runnable {
	
	static int Score=0;
	static JFrame frame = new JFrame("Cubeiga");
	//Sets name of window name not finalized
	
	public static void main(String[] args) throws IOException {
		
		JFrame frame2 = new JFrame("Info");
		//Not being used right now may be used later for scoring information

		
		Thread score = new Thread() {
			public void run() {
				// TODO Auto-generated method stub
				
				
				while (true) {
					//System.out.println(Score);
					//System.out.println(Score);
					//No idea what this try/catch dealio means, but I cannot throw an exception for the TimeUnit function, as the run method must match what is in Runnable.
					try {
						TimeUnit.SECONDS.sleep(1);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					Score += 100;
				}
				
			}
		} ;
		
		//This sorts the highscores from the previous games.
		HighScore check = new HighScore();
		check.Bubble();
		
		JOptionPane.showMessageDialog(null, "Welcome to Cubeiga! \nHighscores"
									+ "\n1. " + check.Names.get(check.Names.size()-1) + " " + check.HighScores.get(check.HighScores.size()-1)
									+ "\n2. " + check.Names.get(check.Names.size()-2) + " " + check.HighScores.get(check.HighScores.size()-2)
									+ "\n3. " + check.Names.get(check.Names.size()-3) + " " + check.HighScores.get(check.HighScores.size()-3)
									+ "\n4. " + check.Names.get(check.Names.size()-4) + " " + check.HighScores.get(check.HighScores.size()-4)
									+ "\n5. " + check.Names.get(check.Names.size()-5) + " " + check.HighScores.get(check.HighScores.size()-5));
		frame.setSize(500, 600);
		//Above sets the size of the game frame
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		score.start();
		frame.add(new GameFrame());
		frame.setVisible(true);
		
		//frame2.setSize(200, 200);
		//frame2.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		//frame2.setVisible(true);
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
	
	public void setBlack(){
		frame.setBackground(Color.black);
	}

	


}
